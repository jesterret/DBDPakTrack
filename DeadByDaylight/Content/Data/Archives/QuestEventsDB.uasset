Asset: DataTable QuestEventsDB
{
    RowStruct: ScriptStruct /Script/DeadByDaylight.QuestEventDefinition
}

Row QuestEvent.AddItemToMap:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Camper.AddItemToMap
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.AddItemToMap
}

Row QuestEvent.AdrenalineTriggered:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.Perk.Activate.Adrenaline
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.AdrenalineTriggered
}

Row QuestEvent.BlessFinish:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Camper.BlessTotem
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.BlessFinish
}

Row QuestEvent.BlightChainMultipleHitLethalRush:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.Blight.LethalDash.HitSurvivor
        }
    ]
    QuestEventEvaluator: /Game/Blueprints/Archives/Quests/MultipleLethalDashQuestEvaluator.MultipleLethalDashQuestEvaluator_C
    Id: QuestEvent.BlightChainMultipleHitLethalRush
}

Row QuestEvent.BlightHitLethalRush:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.Blight.LethalDash.HitSurvivor
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.BlightHitLethalRush
}

Row QuestEvent.Blind:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.SlasherBlinded
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.Blind
}

Row QuestEvent.BlindBurn:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.SlasherBlinded
        }
        , 
        {
            TagName: GameEvent.ScoreEvent.Camper.BurnSlasher.Invisibility
        }
        , 
        {
            TagName: GameEvent.ScoreEvent.Camper.BurnSlasher.Blink
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.BlindBurn
}

Row QuestEvent.BlindCarry:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.SlasherBlinded
        }
    ]
    QuestEventEvaluator: /Script/Archives.SlasherIsCarryingQEEvaluator
    Id: QuestEvent.BlindCarry
}

Row QuestEvent.BlueGlyph:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Camper.ActivateBlueGlyph
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.BlueGlyph
}

Row QuestEvent.BreakGenSame:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.DamageGenerator
        }
    ]
    QuestEventEvaluator: /Script/Archives.MaxSameTargetQEEvaluator
    Id: QuestEvent.BreakGenSame
}

Row QuestEvent.BreakGens:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.DamageGenerator
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.BreakGens
}

Row QuestEvent.BreakGensDifferent:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.DamageGenerator
        }
    ]
    QuestEventEvaluator: /Script/Archives.UniqueTargetIncrementQEEvaluator
    Id: QuestEvent.BreakGensDifferent
}

Row QuestEvent.BreakPallets:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.DestroyPallet
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.BreakPallets
}

Row QuestEvent.BreakPalletsGens:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.DestroyPallet
        }
        , 
        {
            TagName: GameEvent.ScoreEvent.Slasher.DamageGenerator
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.BreakPalletsGens
}

Row QuestEvent.BreakWallsPalletsGens:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.DestroyPallet
        }
        , 
        {
            TagName: GameEvent.ScoreEvent.Slasher.DamageGenerator
        }
        , 
        {
            TagName: GameEvent.ScoreEvent.Slasher.DestroyBreakableWall
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.BreakWallsPalletsGens
}

Row QuestEvent.Carry:
{
    TrackedGameEvents: [ ]
    QuestEventEvaluator: /Script/Archives.CarryDistanceQEEvaluator
    Id: QuestEvent.Carry
}

Row QuestEvent.Chase:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.Chase.PerSecond
        }
    ]
    QuestEventEvaluator: /Script/Archives.CustomValueQEEvaluator
    Id: QuestEvent.Chase
}

Row QuestEvent.ChaseStart:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.ChaseStart
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.ChaseStart
}

Row QuestEvent.ChaseStartCrow:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.ChaseStart
        }
    ]
    QuestEventEvaluator: /Game/Blueprints/Archives/Quests/TargetStartledCrowRecentlyQuestEvaluator.TargetStartledCrowRecentlyQuestEvaluator_C
    Id: QuestEvent.ChaseStartCrow
}

Row QuestEvent.ChaseStartDifferent:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.ChaseStart
        }
    ]
    QuestEventEvaluator: /Script/Archives.UniqueTargetIncrementQEEvaluator
    Id: QuestEvent.ChaseStartDifferent
}

Row QuestEvent.CleanseBlessFinish:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Camper.BlessTotem.Dull
        }
        , 
        {
            TagName: GameEvent.ScoreEvent.Camper.BlessTotem.Hex
        }
        , 
        {
            TagName: GameEvent.ScoreEvent.Camper.CleanseTotem.Dull
        }
        , 
        {
            TagName: GameEvent.ScoreEvent.Camper.CleanseTotem.Hex
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.CleanseBlessFinish
}

Row QuestEvent.CleanseDullFinish:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Camper.CleanseTotem.Dull
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.CleanseDullFinish
}

Row QuestEvent.CleanseFinish:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Camper.CleanseTotem.Dull
        }
        , 
        {
            TagName: GameEvent.ScoreEvent.Camper.CleanseTotem.Hex
        }
        , 
        {
            TagName: None
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.CleanseFinish
}

Row QuestEvent.CleanseHexFinish:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Camper.CleanseTotem.Hex
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.CleanseHexFinish
}

Row QuestEvent.CloseHatch:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.CloseHatch
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.CloseHatch
}

Row QuestEvent.ClownBottleDirectHit:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.Clown.Bomb.DirectHit
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.ClownBottleDirectHit
}

Row QuestEvent.ClownDownIntoxicated:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.Clown.DownSmokedSurvivor
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.ClownDownIntoxicated
}

Row QuestEvent.ClownHitIntoxicated:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.Clown.Hit.SmokedSurvivor
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.ClownHitIntoxicated
}

Row QuestEvent.ClownHitIntoxicatedDifferent:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.Clown.Hit.SmokedSurvivor
        }
    ]
    QuestEventEvaluator: /Script/Archives.UniqueTargetIncrementQEEvaluator
    Id: QuestEvent.ClownHitIntoxicatedDifferent
}

Row QuestEvent.ClownHitWhileInvigorated:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.Slasher.Clown.Hit.WhileInvigorated
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.ClownHitWhileInvigorated
}

Row QuestEvent.ClownIntoxicatedMultiple:
{
    TrackedGameEvents: [ ]
    QuestEventEvaluator: /Game/Blueprints/Archives/Quests/MaxIntoxicatedQuestEvaluator.MaxIntoxicatedQuestEvaluator_C
    Id: QuestEvent.ClownIntoxicatedMultiple
}

Row QuestEvent.ClownIntoxicatedSameConsecutive:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.Clown.Bomb.SurvivorEnteredGasCloud
        }
    ]
    QuestEventEvaluator: /Script/Archives.TriggerWithSameTargetWithinTimeQEEvaluator
    Id: QuestEvent.ClownIntoxicatedSameConsecutive
}

Row QuestEvent.ClownInvigorateIntoxicated:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.Clown.Bomb.SurvivorCured
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.ClownInvigorateIntoxicated
}

Row QuestEvent.ClownSurvivorEnteredGasCloud:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.Clown.Bomb.SurvivorEnteredGasCloud
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.ClownSurvivorEnteredGasCloud
}

Row QuestEvent.ConsumeItem:
{
    TrackedGameEvents: [ ]
    QuestEventEvaluator: /Script/Archives.ItemConsumedQEEvaluator
    Id: QuestEvent.ConsumeItem
}

Row QuestEvent.CoopAction:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Camper.CoopAction
        }
    ]
    QuestEventEvaluator: /Script/Archives.CustomValueQEEvaluator
    Id: QuestEvent.CoopAction
}

Row QuestEvent.Crow:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScareACrow
        }
    ]
    QuestEventEvaluator: /Script/Archives.CustomValueQEEvaluator
    Id: QuestEvent.Crow
}

Row QuestEvent.DiversionUse:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.Camper.Throw.Pebble.Diversion
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.DiversionUse
}

Row QuestEvent.DoctorInflictMadness:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.Doctor.BringSurvivorUpOneMadnessTier
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.DoctorInflictMadness
}

Row QuestEvent.DoctorInflictMadness1:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.Doctor.BringSurvivorUpOneMadnessTier
        }
    ]
    QuestEventEvaluator: /Game/Blueprints/Archives/Quests/InflictMadness1QuestEvaluator.InflictMadness1QuestEvaluator_C
    Id: QuestEvent.DoctorInflictMadness1
}

Row QuestEvent.DoctorInflictMadness2:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.Doctor.BringSurvivorUpOneMadnessTier
        }
    ]
    QuestEventEvaluator: /Game/Blueprints/Archives/Quests/InflictMadness2QuestEvaluator.InflictMadness2QuestEvaluator_C
    Id: QuestEvent.DoctorInflictMadness2
}

Row QuestEvent.DoctorInflictMadness3:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.Doctor.BringSurvivorUpOneMadnessTier
        }
    ]
    QuestEventEvaluator: /Game/Blueprints/Archives/Quests/InflictMadness3QuestEvaluator.InflictMadness3QuestEvaluator_C
    Id: QuestEvent.DoctorInflictMadness3
}

Row QuestEvent.DoctorInflictMadnessDifferent:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.Doctor.BringSurvivorUpOneMadnessTier
        }
    ]
    QuestEventEvaluator: /Script/Archives.UniqueTargetIncrementQEEvaluator
    Id: QuestEvent.DoctorInflictMadnessDifferent
}

Row QuestEvent.DoctorMadnessIIorIIIMultiple:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.Doctor.BringSurvivorUpOneMadnessTier
        }
    ]
    QuestEventEvaluator: /Game/Blueprints/Archives/Quests/MultipleMadSurvivorsQuestEvaluator.MultipleMadSurvivorsQuestEvaluator_C
    Id: QuestEvent.DoctorMadnessIIorIIIMultiple
}

Row QuestEvent.DoctorStaticBlast:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.Doctor.StaticBlastSurvivor
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.DoctorStaticBlast
}

Row QuestEvent.DoctorStaticBlastMultiple:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.Slasher.Doctor.StaticBlastMultiple
        }
    ]
    QuestEventEvaluator: /Script/Archives.CustomValueMoreThanAmountQEEvaluator
    Id: QuestEvent.DoctorStaticBlastMultiple
}

Row QuestEvent.Down:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.CamperKO
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.Down
}

Row QuestEvent.DownHealthy:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.CamperKOFromHealthy
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.DownHealthy
}

Row QuestEvent.DownSuccessively:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.CamperKO
        }
    ]
    QuestEventEvaluator: /Script/Archives.EventInTimeQEEvaluator
    Id: QuestEvent.DownSuccessively
}

Row QuestEvent.EarnBloodpoints:
{
    TrackedGameEvents: [ ]
    QuestEventEvaluator: /Script/Archives.BloodPointsQEEvaluator
    Id: QuestEvent.EarnBloodpoints
}

Row QuestEvent.EarnBloodpointsCategory:
{
    TrackedGameEvents: [ ]
    QuestEventEvaluator: /Script/Archives.BloodPointsQEEvaluator
    Id: QuestEvent.EarnBloodpointsCategory
}

Row QuestEvent.EarnEmblemsQuality:
{
    TrackedGameEvents: [ ]
    QuestEventEvaluator: /Script/Archives.EarnEmblemQualityQEEvaluator
    Id: QuestEvent.EarnEmblemsQuality
}

Row QuestEvent.EmotePointAtKiller:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.Camper.Emote.Point
        }
    ]
    QuestEventEvaluator: /Game/Blueprints/Archives/Quests/AtKillerPremonitionSoundedinTimeQuestEvaluator.AtKillerPremonitionSoundedinTimeQuestEvaluator_C
    Id: QuestEvent.EmotePointAtKiller
}

Row QuestEvent.Escape:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.CamperEscape
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.Escape
}

Row QuestEvent.EscapeAfterBeingOnDeathHook:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.CamperEscape
        }
        , 
        {
            TagName: GameEvent.GameEnd.Reason.Killer.Disconnected
        }
    ]
    QuestEventEvaluator: /Script/Archives.SecondHookStageReachedQEEvaluator
    Id: QuestEvent.EscapeAfterBeingOnDeathHook
}

Row QuestEvent.EscapeChase:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Camper.EscapeChase
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.EscapeChase
}

Row QuestEvent.EscapeChaseAfterFall:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Camper.EscapeChase
        }
    ]
    QuestEventEvaluator: /Game/Blueprints/Archives/Quests/EscapeChaseAfterFallQuestEvaluator.EscapeChaseAfterFallQuestEvaluator_C
    Id: QuestEvent.EscapeChaseAfterFall
}

Row QuestEvent.EscapeChaseInjured:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Camper.EscapeChase
        }
    ]
    QuestEventEvaluator: /Game/Blueprints/Archives/Quests/InstigatorIsInjuredQuestEvaluator.InstigatorIsInjuredQuestEvaluator_C
    Id: QuestEvent.EscapeChaseInjured
}

Row QuestEvent.EscapeGate:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.CamperEscape.ThroughExitGate
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.EscapeGate
}

Row QuestEvent.EscapeHatch:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Camper.EscapeThroughHatch
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.EscapeHatch
}

Row QuestEvent.EscapeHatchWithItem:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Camper.EscapeThroughHatch
        }
    ]
    QuestEventEvaluator: /Script/Archives.HasItemTypeQEEvaluator
    Id: QuestEvent.EscapeHatch
}

Row QuestEvent.EscapeObsession:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Camper.ObsessionEscape
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.EscapeObsession
}

Row QuestEvent.EscapeOther:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.CamperEscape
        }
    ]
    QuestEventEvaluator: /Script/Archives.DoBeforeEscapeQEEvaluator
    Id: QuestEvent.EscapeOther
}

Row QuestEvent.EscapeWithItemNoCharges:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.CamperEscape
        }
        , 
        {
            TagName: GameEvent.GameEnd.Reason.Killer.Disconnected
        }
    ]
    QuestEventEvaluator: /Script/Archives.HasItemNoChargesQEEvaluator
    Id: QuestEvent.EscapeWithItemNoCharges
}

Row QuestEvent.EscapeWithItemRarity:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.CamperEscape
        }
        , 
        {
            TagName: GameEvent.GameEnd.Reason.Killer.Disconnected
        }
    ]
    QuestEventEvaluator: /Script/Archives.HasItemRarityQEEvaluator
    Id: QuestEvent.EscapeWithItemRarity
}

Row QuestEvent.EscapeWithoutHooked:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.CamperEscape
        }
    ]
    QuestEventEvaluator: /Script/Archives.DoBeforeHookQEEvaluator
    Id: QuestEvent.EscapeWithoutHooked
}

Row QuestEvent.Fall:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.Camper.LandFromFalling
        }
    ]
    QuestEventEvaluator: /Game/Blueprints/Archives/Quests/FallQuestEvaluator.FallQuestEvaluator_C
    Id: QuestEvent.Fall
}

Row QuestEvent.FallInChase:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.Camper.LandFromFalling
        }
    ]
    QuestEventEvaluator: /Game/Blueprints/Archives/Quests/FallInChaseQuestEvaluator.FallInChaseQuestEvaluator_C
    Id: QuestEvent.FallInChase
}

Row QuestEvent.FinishPreventGateEscape:
{
    TrackedGameEvents: [ ]
    QuestEventEvaluator: /Script/Archives.FinishPreventGateEscapeQEEvaluator
    Id: QuestEvent.FinishPreventGateEscape
}

Row QuestEvent.FinishedPlaying:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.FinishedPlaying
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.FinishedPlaying
}

Row QuestEvent.ForThePeopleTriggered:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Camper.ForThePeople.ExchangeHealthState
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.ForThePeopleTriggered
}

Row QuestEvent.GeneratorRepairedByTeam:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.Generator.Fixed
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.GeneratorRepairedByTeam
}

Row QuestEvent.GeneratorsNeededAtEndTrial:
{
    TrackedGameEvents: [ ]
    QuestEventEvaluator: /Script/Archives.GeneratorsNeededCountQEEvaluator
    Id: QuestEvent.GeneratorsNeededAtEndTrial
}

Row QuestEvent.Grab:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.SlasherInterruption
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.Grab
}

Row QuestEvent.GrabGenerator:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.InterruptGenerator
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.GrabGenerator
}

Row QuestEvent.GrabLocker:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.Interrupt.Hide
        }
        , 
        {
            TagName: GameEvent.PlayerExitCloset.FoundBySlasher
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.GrabLocker
}

Row QuestEvent.HagTeleport:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.Slasher.Hag.PhantomTrapTeleport
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.HagTeleport
}

Row QuestEvent.HagTeleportLongDistance:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.Slasher.Hag.PhantomTrapTeleport
        }
    ]
    QuestEventEvaluator: /Script/Archives.CustomValueMoreThanAmountQEEvaluator
    Id: QuestEvent.HagTeleportLongDistance
}

Row QuestEvent.HagTeleportShortDistance:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.Slasher.Hag.PhantomTrapTeleport
        }
    ]
    QuestEventEvaluator: /Script/Archives.CustomValueLessThanAmountQEEvaluator
    Id: QuestEvent.HagTeleportShortDistance
}

Row QuestEvent.HagTrapMultiple:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Hag.TriggerPhantomTrap
        }
    ]
    QuestEventEvaluator: /Script/Archives.MultipleEventsInTimeFrameQEEvaluator
    Id: QuestEvent.HagTrapMultiple
}

Row QuestEvent.HagTrapTriggered:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Hag.TriggerPhantomTrap
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.HagTrapTriggered
}

Row QuestEvent.HalloweenEventHook:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.HalloweenEventHookUsed
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.HalloweenEventHook
}

Row QuestEvent.HalloweenEventPumpkinDestroyed:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.HalloweenEventPumpkinDestroyed.Trick
        }
        , 
        {
            TagName: GameEvent.ScoreEvent.HalloweenEventPumpkinDestroyed.Neutral
        }
        , 
        {
            TagName: GameEvent.ScoreEvent.HalloweenEventPumpkinDestroyed.Treat
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.HalloweenEventPumpkinDestroyed
}

Row QuestEvent.HalloweenEventPumpkinDestroyedNeutral:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.HalloweenEventPumpkinDestroyed.Neutral
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.HalloweenEventPumpkinDestroyedNeutral
}

Row QuestEvent.HalloweenEventPumpkinDestroyedTreat:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.HalloweenEventPumpkinDestroyed.Treat
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.HalloweenEventPumpkinDestroyedTreat
}

Row QuestEvent.HalloweenEventPumpkinDestroyedTrick:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.HalloweenEventPumpkinDestroyed.Trick
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.HalloweenEventPumpkinDestroyedTrick
}

Row QuestEvent.HalloweenEventRepairFinish:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.HalloweenEventGenRepaired
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.HalloweenEventRepairFinish
}

Row QuestEvent.HarvestHalloweenPlant:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.HalloweenEventPlantUsed
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.HarvestHalloweenPlant
}

Row QuestEvent.HatchKey:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Camper.UnlockHatch
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.HatchKey
}

Row QuestEvent.Heal:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Camper.Heal.Other.NoMedkit.Percent
        }
        , 
        {
            TagName: GameEvent.ScoreEvent.Camper.Heal.Other.Medkit.Percent
        }
        , 
        {
            TagName: GameEvent.ScoreEvent.Camper.Heal.Self.Percent
        }
        , 
        {
            TagName: GameEvent.ScoreEvent.Camper.Recovery
        }
        , 
        {
            TagName: GameEvent.Camper.Heal.WithPerk.Solidarity
        }
        , 
        {
            TagName: GameEvent.ScoreEvent.Camper.ForThePeople.ExchangeHealthState
        }
        , 
        {
            TagName: GameEvent.Camper.Heal.WithPerk.Adrenaline
        }
    ]
    QuestEventEvaluator: /Script/Archives.CustomValuePercentQEEvaluator
    Id: QuestEvent.Heal
}

Row QuestEvent.HealAfterGate:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Camper.Heal.Other.NoMedkit.Percent
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.HealAfterGate
}

Row QuestEvent.HealCoop:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.Camper.CoopHealingPercent
        }
    ]
    QuestEventEvaluator: /Script/Archives.CustomValuePercentQEEvaluator
    Id: QuestEvent.HealCoop
}

Row QuestEvent.HealDying:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.HealFromDying
        }
        , 
        {
            TagName: GameEvent.ScoreEvent.Camper.FullRecovery
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.HealDying
}

Row QuestEvent.HealFinish:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.HealFromInjured
        }
        , 
        {
            TagName: GameEvent.HealFromDying
        }
        , 
        {
            TagName: GameEvent.ScoreEvent.Camper.FullRecovery
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.HealFinish
}

Row QuestEvent.HealFinishAfterGate:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.HealFromDying
        }
        , 
        {
            TagName: GameEvent.HealFromInjured
        }
        , 
        {
            TagName: GameEvent.ScoreEvent.Camper.FullRecovery
        }
    ]
    QuestEventEvaluator: /Script/Archives.AfterExitOpenQEEvaluator
    Id: QuestEvent.HealFinishAfterGate
}

Row QuestEvent.HealFinishEndgame:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.HealFromInjured
        }
        , 
        {
            TagName: GameEvent.HealFromDying.PostExit
        }
        , 
        {
            TagName: GameEvent.ScoreEvent.Camper.FullRecovery
        }
    ]
    QuestEventEvaluator: /Script/Archives.DuringEndGameCollapseQEEvaluator
    Id: QuestEvent.HealFinishEndgame
}

Row QuestEvent.HealFinishNearKiller:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.HealFromInjured
        }
        , 
        {
            TagName: GameEvent.HealFromDying
        }
        , 
        {
            TagName: GameEvent.ScoreEvent.Camper.FullRecovery
        }
    ]
    QuestEventEvaluator: /Script/Archives.InDirectionOfKillerQEEvaluator
    Id: QuestEvent.HealFinishNearKiller
}

Row QuestEvent.HealFinishOrDown:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.CamperKO
        }
        , 
        {
            TagName: GameEvent.HealFromDying
        }
        , 
        {
            TagName: GameEvent.HealFromInjured
        }
        , 
        {
            TagName: GameEvent.ScoreEvent.Camper.FullRecovery
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.HealFinishOrDown
}

Row QuestEvent.HealFinishSelfAfterUnhook:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.HealFromInjured
        }
        , 
        {
            TagName: GameEvent.ScoreEvent.Camper.FullRecovery
        }
    ]
    QuestEventEvaluator: /Game/Blueprints/Archives/Quests/EventOnSelfAndUnhookedRecently.EventOnSelfAndUnhookedRecently_C
    Id: QuestEvent.HealFinishSelfAfterUnhook
}

Row QuestEvent.HealMedkit:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Camper.Heal.Other.Medkit.Percent
        }
    ]
    QuestEventEvaluator: /Script/Archives.CustomValuePercentQEEvaluator
    Id: QuestEvent.HealMedkit
}

Row QuestEvent.HealMedkitFinish:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.HealFromInjured
        }
        , 
        {
            TagName: GameEvent.HealFromDying
        }
    ]
    QuestEventEvaluator: /Script/Archives.ItemPerformedQEEvaluator
    Id: QuestEvent.HealMedkitFinish
}

Row QuestEvent.HealSelf:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Camper.Heal.Self.Percent
        }
        , 
        {
            TagName: GameEvent.ScoreEvent.Camper.Recovery
        }
        , 
        {
            TagName: GameEvent.Camper.Heal.WithPerk.Solidarity
        }
        , 
        {
            TagName: GameEvent.Camper.Heal.WithPerk.Adrenaline
        }
    ]
    QuestEventEvaluator: /Script/Archives.CustomValuePercentQEEvaluator
    Id: QuestEvent.HealSelf
}

Row QuestEvent.HealSelfUsingSolidarity:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.Camper.Heal.WithPerk.Solidarity
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.HealSelfUsingSolidarity
}

Row QuestEvent.HealWithoutMedkit:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Camper.Heal.Other.NoMedkit.Percent
        }
        , 
        {
            TagName: GameEvent.ScoreEvent.Camper.Heal.Self.Percent
        }
    ]
    QuestEventEvaluator: /Script/Archives.CustomValuePercentQEEvaluator
    Id: QuestEvent.HealWithoutMedkit
}

Row QuestEvent.HideInLockerInOrAfterChase:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.PlayerEnterCloset
        }
    ]
    QuestEventEvaluator: /Game/Blueprints/Archives/Quests/RecentlyInChaseQuestEvaluator.RecentlyInChaseQuestEvaluator_C
    Id: QuestEvent.HideInLockerInOrAfterChase
}

Row QuestEvent.HideInLockerNearKiller:
{
    TrackedGameEvents: [ ]
    QuestEventEvaluator: /Script/Archives.InLockerNearKillerQEEvaluator
    Id: QuestEvent.HideInLockerNearKiller
}

Row QuestEvent.HideNearKiller:
{
    TrackedGameEvents: [ ]
    QuestEventEvaluator: /Script/Archives.HideNearKillerQEEvaluator
    Id: QuestEvent.HideNearKiller
}

Row QuestEvent.HillbillyChainsaw:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Hillbilly.Chainsaw.Hit
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.HillbillyChainsaw
}

Row QuestEvent.HillbillyChainsawConsecutive:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Hillbilly.Chainsaw.Hit
        }
    ]
    QuestEventEvaluator: /Script/Archives.MultipleEventsInTimeFrameQEEvaluator
    Id: QuestEvent.HillbillyChainsawConsecutive
}

Row QuestEvent.HillbillyChainsawDifferent:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Hillbilly.Chainsaw.Hit
        }
    ]
    QuestEventEvaluator: /Script/Archives.UniqueTargetIncrementQEEvaluator
    Id: QuestEvent.HillbillyChainsawDifferent
}

Row QuestEvent.HillbillyChainsawDistance:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.Slasher.Hillbilly.Chainsaw.Hit
        }
    ]
    QuestEventEvaluator: /Script/Archives.CustomValueMoreThanAmountQEEvaluator
    Id: QuestEvent.HillbillyChainsawDistance
}

Row QuestEvent.HillbillySprint:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Hillbilly.Chainsaw.LongDash
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.HillbillySprint
}

Row QuestEvent.Hit:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.SlasherBasicAttackSuccess
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.Hit
}

Row QuestEvent.HitConsecutiveDifferent:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.SlasherBasicAttackSuccess
        }
    ]
    QuestEventEvaluator: /Script/Archives.UniqueTargetsInTimeQEEvaluator
    Id: QuestEvent.HitConsecutiveDifferent
}

Row QuestEvent.HitDifferent:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.SlasherBasicAttackSuccess
        }
    ]
    QuestEventEvaluator: /Script/Archives.UniqueTargetIncrementQEEvaluator
    Id: QuestEvent.HitDifferent
}

Row QuestEvent.HitExposed:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.SlasherBasicAttackSuccess
        }
    ]
    QuestEventEvaluator: /Game/Blueprints/Archives/Quests/TargetIsExposed_QuestEvaluator.TargetIsExposed_QuestEvaluator_C
    Id: QuestEvent.HitExposed
}

Row QuestEvent.HitGrabNearPalletsVaultsWalls:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.PickupCamper
        }
        , 
        {
            TagName: GameEvent.ScoreEvent.Slasher.PickupTrappedCamper
        }
        , 
        {
            TagName: GameEvent.SlasherBasicAttackSuccess
        }
        , 
        {
            TagName: GameEvent.PlayerExitCloset.FoundBySlasher
        }
        , 
        {
            TagName: GameEvent.SlasherInterruption
        }
    ]
    QuestEventEvaluator: /Script/Archives.NearPalletVaultWallQEEvaluator
    Id: QuestEvent.HitGrabNearPalletsVaultsWalls
}

Row QuestEvent.HitHemorrhage:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.SlasherBasicAttackSuccess
        }
    ]
    QuestEventEvaluator: /Game/Blueprints/Archives/Quests/TargetHemorrhageQuestEvaluator.TargetHemorrhageQuestEvaluator_C
    Id: QuestEvent.HitHemorrhage
}

Row QuestEvent.HitHindered:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.SlasherBasicAttackSuccess
        }
    ]
    QuestEventEvaluator: /Game/Blueprints/Archives/Quests/TargetHinderedQuestEvaluator.TargetHinderedQuestEvaluator_C
    Id: QuestEvent.HitHindered
}

Row QuestEvent.HitOblivious:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.SlasherBasicAttackSuccess
        }
    ]
    QuestEventEvaluator: /Game/Blueprints/Archives/Quests/TargetObliviousQuestEvaluator.TargetObliviousQuestEvaluator_C
    Id: QuestEvent.HitOblivious
}

Row QuestEvent.HitUndetectable:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.SlasherBasicAttackSuccess
        }
    ]
    QuestEventEvaluator: /Game/Blueprints/Archives/Quests/UndetectableQuestEvaluator.UndetectableQuestEvaluator_C
    Id: QuestEvent.HitUndetectable
}

Row QuestEvent.HitVaulting:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.SlasherBasicAttackSuccess
        }
    ]
    QuestEventEvaluator: /Game/Blueprints/Archives/Quests/TargetIsVaultingEvaluator.TargetIsVaultingEvaluator_C
    Id: QuestEvent.HitVaulting
}

Row QuestEvent.Hook:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.HookCamper
        }
        , 
        {
            TagName: GameEvent.ScoreEvent.EndGame.Slasher.HookSurvivor
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.Hook
}

Row QuestEvent.HookBasement:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.HookCamper
        }
    ]
    QuestEventEvaluator: /Script/Archives.TargetInBasementQEEvaluator
    Id: QuestEvent.HookBasement
}

Row QuestEvent.HookConsecutiveDifferent:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.HookCamper
        }
        , 
        {
            TagName: GameEvent.ScoreEvent.EndGame.Slasher.HookSurvivor
        }
    ]
    QuestEventEvaluator: /Script/Archives.UniqueTargetsInTimeQEEvaluator
    Id: QuestEvent.HookConsecutiveDifferent
}

Row QuestEvent.HookDifferent:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.HookCamper
        }
        , 
        {
            TagName: GameEvent.ScoreEvent.EndGame.Slasher.HookSurvivor
        }
    ]
    QuestEventEvaluator: /Script/Archives.UniqueTargetIncrementQEEvaluator
    Id: QuestEvent.HookDifferent
}

Row QuestEvent.HookEndgame:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.EndGame.Slasher.HookSurvivor
        }
    ]
    QuestEventEvaluator: /Script/Archives.DuringEndGameCollapseQEEvaluator
    Id: QuestEvent.HookEndgame
}

Row QuestEvent.HookMultiple:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.HookCamper
        }
        , 
        {
            TagName: GameEvent.ScoreEvent.EndGame.Slasher.HookSurvivor
        }
    ]
    QuestEventEvaluator: /Script/Archives.SurvivorHookSameTimeQEEvaluator
    Id: QuestEvent.HookMultiple
}

Row QuestEvent.HookMultipleBasement:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.HookCamper
        }
        , 
        {
            TagName: GameEvent.ScoreEvent.EndGame.Slasher.HookSurvivor
        }
    ]
    QuestEventEvaluator: /Script/Archives.HookSameTimeBasementQEEvaluator
    Id: QuestEvent.HookMultipleBasement
}

Row QuestEvent.HookObsession:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.HookCamper
        }
        , 
        {
            TagName: GameEvent.ScoreEvent.EndGame.Slasher.HookSurvivor
        }
    ]
    QuestEventEvaluator: /Script/Archives.TargetIsObsessionQEEvaluator
    Id: QuestEvent.HookObsession
}

Row QuestEvent.HookUnhookEndgame:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.EndGame.Slasher.HookSurvivor
        }
        , 
        {
            TagName: GameEvent.ScoreEvent.Camper.SafeUnhook
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.HookUnhookEndgame
}

Row QuestEvent.HuntressHatchetChargedHit:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.Slasher.Huntress.HatchetSkillShotHit
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.HuntressHatchetChargedHit
}

Row QuestEvent.HuntressHatchetDistanceHit:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.Slasher.Huntress.HatchetHit
        }
    ]
    QuestEventEvaluator: /Game/Blueprints/Archives/Quests/CustomDistanceQuestEvaluator.CustomDistanceQuestEvaluator_C
    Id: QuestEvent.HuntressHatchetDistanceHit
}

Row QuestEvent.HuntressHatchetDown:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.Slasher.Huntress.HatchetDown
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.HuntressHatchetDown
}

Row QuestEvent.HuntressHatchetHit:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.Slasher.Huntress.HatchetHit
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.HuntressHatchetHit
}

Row QuestEvent.HuntressHatchetHitDifferent:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.Slasher.Huntress.HatchetHit
        }
    ]
    QuestEventEvaluator: /Script/Archives.UniqueTargetIncrementQEEvaluator
    Id: QuestEvent.HuntressHatchetHitDifferent
}

Row QuestEvent.HuntressHatchetHitHatchetDown:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.Slasher.Huntress.HatchetDown
        }
    ]
    QuestEventEvaluator: /Game/Blueprints/Archives/Quests/TargetWasRecentlyBasicAttackedEvaluator.TargetWasRecentlyBasicAttackedEvaluator_C
    Id: QuestEvent.HuntressHatchetHitHatchetDown
}

Row QuestEvent.HuntressHatchetHitReload:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.Slasher.Huntress.HatchetHit
        }
    ]
    QuestEventEvaluator: /Game/Blueprints/Archives/Quests/MultipleHatchetHitsBeforeReloadEvaluator.MultipleHatchetHitsBeforeReloadEvaluator_C
    Id: QuestEvent.HuntressHatchetHitReload
}

Row QuestEvent.HuntressHatchetHitUndetectable:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.Slasher.Huntress.HatchetHit
        }
        , 
        {
            TagName: GameEvent.SlasherBasicAttackSuccess
        }
    ]
    QuestEventEvaluator: /Game/Blueprints/Archives/Quests/UndetectableQuestEvaluator.UndetectableQuestEvaluator_C
    Id: QuestEvent.HuntressHatchetHitUndetectable
}

Row QuestEvent.HuntressHitNoHatchets:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.SlasherBasicAttackSuccess
        }
    ]
    QuestEventEvaluator: /Game/Blueprints/Archives/Quests/OutOfAmmoQuestEvaluator.OutOfAmmoQuestEvaluator_C
    Id: QuestEvent.HuntressHitNoHatchets
}

Row QuestEvent.InflictDeepWound:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.ApplyDeepWound
        }
        , 
        {
            TagName: GameEvent.EnduranceApplyDeepWound
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.InflictDeepWound
}

Row QuestEvent.InjuredDyingHookedMultiple:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.DamageStateChanged
        }
        , 
        {
            TagName: GameEvent.CamperWasHooked
        }
        , 
        {
            TagName: GameEvent.CamperWasUnhooked
        }
    ]
    QuestEventEvaluator: /Script/Archives.InjuredDyingHookManyQEEvaluator
    Id: QuestEvent.InjuredDyingHookedMultiple
}

Row QuestEvent.InjuredDyingMultiple:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.DamageStateChanged
        }
        , 
        {
            TagName: GameEvent.CamperWasUnhooked
        }
        , 
        {
            TagName: GameEvent.CamperWasHooked
        }
    ]
    QuestEventEvaluator: /Script/Archives.InjuredDyingMultipleQEEvaluator
    Id: QuestEvent.InjuredDyingMultiple
}

Row QuestEvent.Kill:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.Kill
        }
        , 
        {
            TagName: GameEvent.HookedCamperSacrificeBegin
        }
        , 
        {
            TagName: GameEvent.ScoreEvent.Slasher.KillWithReverseBearTrap
        }
        , 
        {
            TagName: GameEvent.ScoreEvent.EndGame.Slasher.EntitySacrificeAtEnd
        }
        , 
        {
            TagName: GameEvent.ScoreEvent.Slasher.Executioner.DeathBed.SurvivorDead
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.Kill
}

Row QuestEvent.KillObsession:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.Kill
        }
        , 
        {
            TagName: GameEvent.HookedCamperSacrificeBegin
        }
        , 
        {
            TagName: GameEvent.ScoreEvent.Slasher.KillWithReverseBearTrap
        }
        , 
        {
            TagName: GameEvent.ScoreEvent.EndGame.Slasher.EntitySacrificeAtEnd
        }
        , 
        {
            TagName: GameEvent.ScoreEvent.Slasher.Executioner.DeathBed.SurvivorDead
        }
    ]
    QuestEventEvaluator: /Script/Archives.TargetIsObsessionQEEvaluator
    Id: QuestEvent.KillObsession
}

Row QuestEvent.LegionHitDifferentInFrenzy:
{
    TrackedGameEvents: [ ]
    QuestEventEvaluator: /Game/Blueprints/Archives/Quests/HitDifferentInFrenzyQuestEvaluator.HitDifferentInFrenzyQuestEvaluator_C
    Id: QuestEvent.LegionHitDifferentInFrenzy
}

Row QuestEvent.LegionHitMultipleInFrenzy:
{
    TrackedGameEvents: [ ]
    QuestEventEvaluator: /Game/Blueprints/Archives/Quests/HitMultipleInFrenzyQuestEvaluator.HitMultipleInFrenzyQuestEvaluator_C
    Id: QuestEvent.LegionHitMultipleInFrenzy
}

Row QuestEvent.LivingAtEndTrial:
{
    TrackedGameEvents: [ ]
    QuestEventEvaluator: /Script/Archives.LivingSurvivorsCountQEEvaluator
    Id: QuestEvent.LivingAtEndTrial
}

Row QuestEvent.MissInRange:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.SlasherAttackMissed
        }
    ]
    QuestEventEvaluator: /Game/Blueprints/Archives/Quests/EventNearMeQuestEvaluator.EventNearMeQuestEvaluator_C
    Id: QuestEvent.MissInRange
}

Row QuestEvent.MissInRangeAndEnterLocker:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.SlasherAttackMissed
        }
    ]
    QuestEventEvaluator: /Game/Blueprints/Archives/Quests/NearMeEvent_EnterLocker_QuestEvaluator.NearMeEvent_EnterLocker_QuestEvaluator_C
    Id: QuestEvent.MissInRangeAndEnterLocker
}

Row QuestEvent.MissInRangeAndVault:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.SlasherAttackMissed
        }
    ]
    QuestEventEvaluator: /Game/Blueprints/Archives/Quests/NearMeEvent_RecentVault_QuestEvaluator.NearMeEvent_RecentVault_QuestEvaluator_C
    Id: QuestEvent.MissInRangeAndVault
}

Row QuestEvent.MissInRangeDuringDeadHard:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.SlasherAttackMissed
        }
    ]
    QuestEventEvaluator: /Game/Blueprints/Archives/Quests/NearMeEvent_RecentDeadHard_QuestEvaluator.NearMeEvent_RecentDeadHard_QuestEvaluator_C
    Id: QuestEvent.MissInRangeDuringDeadHard
}

Row QuestEvent.Mori:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.Kill
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.Mori
}

Row QuestEvent.MoriObsession:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.Kill
        }
    ]
    QuestEventEvaluator: /Script/Archives.TargetIsObsessionQEEvaluator
    Id: QuestEvent.MoriObsession
}

Row QuestEvent.NurseBlinkChainMultipleHit:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Nurse.BlinkAttackHit
        }
    ]
    QuestEventEvaluator: /Script/Archives.NurseChainBlinkNumberQEEvaluator
    Id: QuestEvent.NurseBlinkChainMultipleHit
}

Row QuestEvent.NurseBlinkHit:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Nurse.BlinkAttackHit
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.NurseBlinkHit
}

Row QuestEvent.NurseBlinkHitSurprise:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Nurse.BlinkAttackHit
        }
        , 
        {
            TagName: GameEvent.ScoreEvent.Nurse.BlinkInterrupt
        }
    ]
    QuestEventEvaluator: /Game/Blueprints/Archives/Quests/TargetIsInteractingQuestEvaluator.TargetIsInteractingQuestEvaluator_C
    Id: QuestEvent.NurseBlinkHitSurprise
}

Row QuestEvent.NurseBlinkPrecise:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Nurse.PreciseBlink
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.NurseBlinkPrecise
}

Row QuestEvent.OniDashConsecutiveHitDifferent:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.Oni.DemonMode.PowerAttack.Dash
        }
    ]
    QuestEventEvaluator: /Script/Archives.OniDashHitDiffInTimeQEEvaluator
    Id: QuestEvent.OniDashConsecutiveHitDifferent
}

Row QuestEvent.OniDashHit:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.Oni.DemonMode.PowerAttack.Dash
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.OniDashHit
}

Row QuestEvent.OniDashTimeHit:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.Oni.Dash.PerSecond
        }
    ]
    QuestEventEvaluator: /Game/Blueprints/Archives/Quests/CustomValueMoreThanAndSpecialAttackHitRecentlyQuestEvaluator.CustomValueMoreThanAndSpecialAttackHitRecentlyQuestEvaluator_C
    Id: QuestEvent.OniDashTimeHit
}

Row QuestEvent.OniStrike:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.Oni.DemonMode.PowerAttack
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.OniStrike
}

Row QuestEvent.OniStrikeDifferent:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.Oni.DemonMode.PowerAttack
        }
    ]
    QuestEventEvaluator: /Script/Archives.UniqueTargetIncrementQEEvaluator
    Id: QuestEvent.OniStrikeDifferent
}

Row QuestEvent.OpenExitGate:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ExitGateOpened
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.OpenExitGate
}

Row QuestEvent.PalletDrop:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.Camper.Pallet.Drop
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.PalletDrop
}

Row QuestEvent.PalletDropInChase:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Camper.Pallet.Drop.InChase
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.PalletDropInChase
}

Row QuestEvent.PalletDropInChaseOrBreakPallets:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Camper.Pallet.Drop.InChase
        }
        , 
        {
            TagName: GameEvent.ScoreEvent.Slasher.DestroyPallet
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.PalletDropInChaseOrBreakPallets
}

Row QuestEvent.PalletPulldownBlock:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.Blight.Addon.PalletBlocked
        }
        , 
        {
            TagName: GameEvent.Slasher.Blight.Perk.PalletBlocked
        }
    ]
    QuestEventEvaluator: /Script/Archives.CustomValueQEEvaluator
    Id: QuestEvent.PalletPulldownBlock
}

Row QuestEvent.PalletReset:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.Camper.Pallet.PullUp.Complete
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.PalletReset
}

Row QuestEvent.PalletResetNearKiller:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.Camper.Pallet.PullUp.Complete
        }
    ]
    QuestEventEvaluator: /Script/Archives.InDirectionOfKillerQEEvaluator
    Id: QuestEvent.PalletResetNearKiller
}

Row QuestEvent.PalletStun:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.Player.StunSlasher.WithPallet
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.PalletStun
}

Row QuestEvent.PalletStunReset:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Camper.StunSlasher.WithAction
        }
    ]
    QuestEventEvaluator: /Script/Archives.WithPulledUpPalletQEEvaluator
    Id: QuestEvent.PalletStunReset
}

Row QuestEvent.PigAmbush:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Pig.Ambush.Hit
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.PigAmbush
}

Row QuestEvent.PigAmbushNearGenerator:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Pig.Ambush.Hit
        }
    ]
    QuestEventEvaluator: /Game/Blueprints/Archives/Quests/PigAmbushNearGeneratorQuestEvaluator.PigAmbushNearGeneratorQuestEvaluator_C
    Id: QuestEvent.PigAmbushNearGenerator
}

Row QuestEvent.PigTrap:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Pig.AttachReverseBearTrap
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.PigTrap
}

Row QuestEvent.PigTrapDifferent:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Pig.AttachReverseBearTrap
        }
    ]
    QuestEventEvaluator: /Script/Archives.UniqueTargetIncrementQEEvaluator
    Id: QuestEvent.PigTrapDifferent
}

Row QuestEvent.PlagueCorruptPurgeMultiple:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.HitSurvivorWithVomit.Super
        }
    ]
    QuestEventEvaluator: /Script/Archives.PlagueCorruptUniqueTargetsQEEvaluator
    Id: QuestEvent.PlagueCorruptPurgeMultiple
}

Row QuestEvent.PlagueInfectMax:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.Slasher.Plague.ApplyMaxSickness
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.PlagueInfectMax
}

Row QuestEvent.PlaguePurgeInjure:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.CorruptPurgeDamage
        }
        , 
        {
            TagName: GameEvent.ScoreEvent.Slasher.SicknessDamage
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.PlaguePurgeInjure
}

Row QuestEvent.PreventExitGateOpen:
{
    TrackedGameEvents: [ ]
    QuestEventEvaluator: /Script/Archives.PreventExitGateOpenQEEvaluator
    Id: QuestEvent.PreventExitGateOpen
}

Row QuestEvent.ProtectionHit:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Camper.HitNearFriendInNeed
        }
        , 
        {
            TagName: GameEvent.Camper.HitNearUnhookedFriendInNeed
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.ProtectionHit
}

Row QuestEvent.PurpleGlyph:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.ActivatePurpleGlyph
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.PurpleGlyph
}

Row QuestEvent.RedGlyph:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.ActivateRedGlyph
        }
        , 
        {
            TagName: GameEvent.ScoreEvent.Camper.ActivateRedGlyph
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.RedGlyph
}

Row QuestEvent.RedHerringTriggered:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.Perk.Activate.EnterClosetRedHerring
        }
    ]
    QuestEventEvaluator: /Script/Archives.KillerNearRedHerringGeneratorQEEvaluator
    Id: QuestEvent.RedHerringTriggered
}

Row QuestEvent.Repair:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Camper.GeneratorPercent
        }
    ]
    QuestEventEvaluator: /Script/Archives.CustomValuePercentQEEvaluator
    Id: QuestEvent.Repair
}

Row QuestEvent.RepairCoop:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.Camper.CoopRepair
        }
    ]
    QuestEventEvaluator: /Script/Archives.RepairCoopQEEvaluator
    Id: QuestEvent.RepairCoop
}

Row QuestEvent.RepairDifferent:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.PlayerStoppedGeneratorRepair
        }
    ]
    QuestEventEvaluator: /Script/Archives.UniqueTargetIncrementQEEvaluator
    Id: QuestEvent.RepairDifferent
}

Row QuestEvent.RepairFinish:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.Camper.Generator.RepairFinish
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.RepairFinish
}

Row QuestEvent.RepairFinishInTerrorRadius:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.Camper.Generator.RepairFinish
        }
    ]
    QuestEventEvaluator: /Game/Blueprints/Archives/Quests/InstigatorInTerrorRadiusQuestEvaluator.InstigatorInTerrorRadiusQuestEvaluator_C
    Id: QuestEvent.RepairFinishInTerrorRadius
}

Row QuestEvent.RepairFinishUnhookWhileInjured:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Camper.SafeUnhook
        }
        , 
        {
            TagName: GameEvent.Camper.Generator.RepairFinish
        }
    ]
    QuestEventEvaluator: /Game/Blueprints/Archives/Quests/InstigatorIsInjuredQuestEvaluator.InstigatorIsInjuredQuestEvaluator_C
    Id: QuestEvent.RepairFinishUnhookWhileInjured
}

Row QuestEvent.RepairInTerrorRadius:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Camper.GeneratorPercent
        }
    ]
    QuestEventEvaluator: /Game/Blueprints/Archives/Quests/InstigatorInTerrorRadiusQuestEvaluator.InstigatorInTerrorRadiusQuestEvaluator_C
    Id: QuestEvent.RepairInTerrorRadius
}

Row QuestEvent.RummageBasement:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Camper.Chest.Search.Complete.WhileOpen
        }
    ]
    QuestEventEvaluator: /Script/Archives.InstigatorInBasementQEEvaluator
    Id: QuestEvent.RummageBasement
}

Row QuestEvent.SabotageFinish:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.Camper.SabotageHook.Complete
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.SabotageFinish
}

Row QuestEvent.SabotageFinishInTerrorRadius:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.Camper.SabotageHook.Complete
        }
    ]
    QuestEventEvaluator: /Game/Blueprints/Archives/Quests/InstigatorInTerrorRadiusQuestEvaluator.InstigatorInTerrorRadiusQuestEvaluator_C
    Id: QuestEvent.SabotageFinishInTerrorRadius
}

Row QuestEvent.SabotageWithoutToolbox:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Camper.SabotageHook.NoToolBox
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.SabotageWithoutToolbox
}

Row QuestEvent.Sacrifice:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.HookedCamperSacrificeBegin
        }
        , 
        {
            TagName: GameEvent.EndGame.Camper.SacrificeStart
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.Sacrifice
}

Row QuestEvent.SacrificeBasement:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.HookedCamperSacrificeBegin
        }
    ]
    QuestEventEvaluator: /Script/Archives.TargetInBasementQEEvaluator
    Id: QuestEvent.SacrificeBasement
}

Row QuestEvent.SacrificeEndgame:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.EndGame.Slasher.EntitySacrificeAtEnd
        }
        , 
        {
            TagName: GameEvent.ScoreEvent.EndGame.Slasher.SacrificeSurvivor
        }
    ]
    QuestEventEvaluator: /Script/Archives.DuringEndGameCollapseQEEvaluator
    Id: QuestEvent.SacrificeEndgame
}

Row QuestEvent.Scream:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.Camper.Scream
        }
    ]
    QuestEventEvaluator: /Script/Archives.ScreamSpecialCaseQEEvaluator
    Id: QuestEvent.Scream
}

Row QuestEvent.Search:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Camper.SearchablePercent
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.Search
}

Row QuestEvent.SearchBasement:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Camper.SearchablePercent
        }
    ]
    QuestEventEvaluator: /Script/Archives.InstigatorInBasementPercentQEEvaluator
    Id: QuestEvent.SearchBasement
}

Row QuestEvent.SearchBasementFinish:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Camper.SearchableCompleteContributionPercent
        }
    ]
    QuestEventEvaluator: /Script/Archives.InstigatorInBasementQEEvaluator
    Id: QuestEvent.SearchBasementFinish
}

Row QuestEvent.SearchFindItemRarity:
{
    TrackedGameEvents: [ ]
    QuestEventEvaluator: /Script/Archives.SearchItemRarityQEEvaluator
    Id: QuestEvent.SearchFindItemRarity
}

Row QuestEvent.SearchFinish:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Camper.SearchableCompleteContributionPercent
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.SearchFinish
}

Row QuestEvent.SkillCheckConsecutive:
{
    TrackedGameEvents: [ ]
    QuestEventEvaluator: /Script/Archives.SkillCheckConsecutiveQEEvaluator
    Id: QuestEvent.SkillCheckConsecutive
}

Row QuestEvent.SkillCheckGreatSuccess:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.Camper.SkillCheck.Success.Bonus
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.SkillCheckGreatSuccess
}

Row QuestEvent.SkillCheckGreatSuccessInTerrorRadius:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.Camper.SkillCheck.Success.Bonus
        }
    ]
    QuestEventEvaluator: /Game/Blueprints/Archives/Quests/InstigatorInTerrorRadiusQuestEvaluator.InstigatorInTerrorRadiusQuestEvaluator_C
    Id: QuestEvent.SkillCheckGreatSuccessInTerrorRadius
}

Row QuestEvent.SkillCheckHealingSuccess:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Camper.SkillCheck.Heal.Other.Success
        }
        , 
        {
            TagName: GameEvent.ScoreEvent.Camper.SkillCheck.Heal.Self.Success
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.SkillCheckHealingSuccess
}

Row QuestEvent.SkillCheckSuccess:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.Camper.SkillCheck.Success
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.SkillCheckSuccess
}

Row QuestEvent.SkillCheckSuccessInTerrorRadius:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.Camper.SkillCheck.Success
        }
    ]
    QuestEventEvaluator: /Game/Blueprints/Archives/Quests/InstigatorInTerrorRadiusQuestEvaluator.InstigatorInTerrorRadiusQuestEvaluator_C
    Id: QuestEvent.SkillCheckSuccessInTerrorRadius
}

Row QuestEvent.SpecialAttackHit:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.SpecialAttack.Hit
        }
    ]
    QuestEventEvaluator: /Game/Blueprints/Archives/Quests/TargetWasRecentlyDamagedBySpecialAttackEvaluator.TargetWasRecentlyDamagedBySpecialAttackEvaluator_C
    Id: QuestEvent.SpecialAttackHit
}

Row QuestEvent.SpiritGrabHitPostPhase:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.GrabSurvivorPostActivePhaseWalk
        }
        , 
        {
            TagName: GameEvent.ScoreEvent.Slasher.HitSurvivorPostActivePhaseWalk
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.SpiritGrabHitPostPhase
}

Row QuestEvent.SpiritGrabPostPhase:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.GrabSurvivorPostActivePhaseWalk
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.SpiritGrabPostPhase
}

Row QuestEvent.SpiritHitPostPhase:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.HitSurvivorPostActivePhaseWalk
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.SpiritHitPostPhase
}

Row QuestEvent.SpiritStartChasePostPhase:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.ChaseStart
        }
    ]
    QuestEventEvaluator: /Game/Blueprints/Archives/Quests/StartChasePostPhaseQuestEvaluator.StartChasePostPhaseQuestEvaluator_C
    Id: QuestEvent.SpiritStartChasePostPhase
}

Row QuestEvent.SprintBurstTriggeredInChase:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.Perk.Activate.SprintBurst
        }
    ]
    QuestEventEvaluator: /Game/Blueprints/Archives/Quests/InChaseQuestEvaluator.InChaseQuestEvaluator_C
    Id: QuestEvent.SprintBurstTriggeredInChase
}

Row QuestEvent.Stun:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.Player.StunSlasher
        }
        , 
        {
            TagName: GameEvent.ScoreEvent.Camper.BurnSlasher
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.Stun
}

Row QuestEvent.StunBlind:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.Player.StunSlasher
        }
        , 
        {
            TagName: GameEvent.SlasherBlinded
        }
        , 
        {
            TagName: GameEvent.SlasherBlindedWhileImmune
        }
        , 
        {
            TagName: GameEvent.ScoreEvent.Camper.BurnSlasher
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.StunBlind
}

Row QuestEvent.StunCarrying:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Camper.EscapeCarry
        }
        , 
        {
            TagName: GameEvent.ScoreEvent.Camper.StunCarryingSlasher
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.StunCarrying
}

Row QuestEvent.StunKillerWithHeadOn:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Camper.StunSlasher.WithAbility.HeadOn
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.StunKillerWithHeadOn
}

Row QuestEvent.StunSuccessively:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.Player.StunSlasher
        }
        , 
        {
            TagName: GameEvent.ScoreEvent.Camper.BurnSlasher
        }
    ]
    QuestEventEvaluator: /Script/Archives.EventInTimeQEEvaluator
    Id: QuestEvent.StunSuccessively
}

Row QuestEvent.Test:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Camper.GeneratorPercent
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.Test
}

Row QuestEvent.TotemsAtEndTrial:
{
    TrackedGameEvents: [ ]
    QuestEventEvaluator: /Script/Archives.TotemsAtEndTrialCountQEEvaluator
    Id: QuestEvent.TotemsAtEndTrial
}

Row QuestEvent.TrapperCatch:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.TrapSurvivor
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.TrapperCatch
}

Row QuestEvent.TrapperCatchDifferent:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.TrapSurvivor
        }
    ]
    QuestEventEvaluator: /Script/Archives.UniqueTargetIncrementQEEvaluator
    Id: QuestEvent.TrapperCatchDifferent
}

Row QuestEvent.TrapperCatchInChase:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.TrapSurvivor
        }
    ]
    QuestEventEvaluator: /Game/Blueprints/Archives/Quests/InChaseQuestEvaluator.InChaseQuestEvaluator_C
    Id: QuestEvent.TrapperCatchInChase
}

Row QuestEvent.TrapperCatchTrapNearPalletsVaultsWalls:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.TrapSurvivor
        }
    ]
    QuestEventEvaluator: /Script/Archives.TargetNearPalletVaultWallQEEvaluator
    Id: QuestEvent.TrapperCatchTrapNearPalletsVaultsWalls
}

Row QuestEvent.TrapperCatchTrapReset:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.Slasher.Trapper.TrapTwiceWithoutMovingBearTrap
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.TrapperCatchTrapReset
}

Row QuestEvent.TricksterKnivesDistanceHit:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.Slasher.Trickster.KnifeThrow.Hit
        }
    ]
    QuestEventEvaluator: /Game/Blueprints/Archives/Quests/CustomDistanceQuestEvaluator.CustomDistanceQuestEvaluator_C
    Id: QuestEvent.TricksterKnivesDistanceHit
}

Row QuestEvent.TricksterKnivesDownMainEvent:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.Slasher.Trickster.KnifeThrow.Hit.DownedDuringMainEvent
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.TricksterKnivesDownMainEvent
}

Row QuestEvent.TricksterKnivesHit:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.Slasher.Trickster.KnifeThrow.Hit
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.TricksterKnivesHit
}

Row QuestEvent.TricksterMaxLaceration:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Trickster.Laceration
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.TricksterMaxLaceration
}

Row QuestEvent.Unhook:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Camper.SafeUnhook
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.Unhook
}

Row QuestEvent.UnhookAfterExitGate:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Camper.SafeUnhook
        }
    ]
    QuestEventEvaluator: /Script/Archives.AfterExitOpenQEEvaluator
    Id: QuestEvent.UnhookAfterExitGate
}

Row QuestEvent.UnhookBasement:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Camper.SafeUnhook
        }
    ]
    QuestEventEvaluator: /Script/Archives.InstigatorInBasementQEEvaluator
    Id: QuestEvent.UnhookBasement
}

Row QuestEvent.UnhookDifferent:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Camper.SafeUnhook
        }
    ]
    QuestEventEvaluator: /Script/Archives.UniqueTargetIncrementQEEvaluator
    Id: QuestEvent.UnhookDifferent
}

Row QuestEvent.UnhookEndgame:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Camper.SafeUnhook
        }
    ]
    QuestEventEvaluator: /Script/Archives.DuringEndGameCollapseQEEvaluator
    Id: QuestEvent.UnhookEndgame
}

Row QuestEvent.UnhookInTerrorRadius:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Camper.SafeUnhook
        }
    ]
    QuestEventEvaluator: /Game/Blueprints/Archives/Quests/InstigatorInTerrorRadiusQuestEvaluator.InstigatorInTerrorRadiusQuestEvaluator_C
    Id: QuestEvent.UnhookInTerrorRadius
}

Row QuestEvent.UnhookOrHook:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Camper.SafeUnhook
        }
        , 
        {
            TagName: GameEvent.ScoreEvent.Slasher.HookCamper
        }
        , 
        {
            TagName: GameEvent.ScoreEvent.EndGame.Slasher.HookSurvivor
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.UnhookOrHook
}

Row QuestEvent.UnhookProtectionHit:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Camper.SafeUnhook
        }
        , 
        {
            TagName: GameEvent.Camper.HitNearUnhookedFriendInNeed
        }
        , 
        {
            TagName: GameEvent.ScoreEvent.Camper.HitNearFriendInNeed
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.UnhookProtectionHit
}

Row QuestEvent.UnhookSafeWhoUnhooked:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Camper.SafeUnhook
        }
    ]
    QuestEventEvaluator: /Game/Blueprints/Archives/Quests/ReturnTheFavorUnhooksEvaluator.ReturnTheFavorUnhooksEvaluator_C
    Id: QuestEvent.UnhookSafeWhoUnhooked
}

Row QuestEvent.UnhookSelf:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Camper.EscapeHook
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.UnhookSelf
}

Row QuestEvent.UnhookSurvivorWhileOnDeathHook:
{
    TrackedGameEvents: [
        {
            TagName: GameplayModifierType.ScoreModifier.Camper.SafeUnhook
        }
    ]
    QuestEventEvaluator: /Script/Archives.InstigatorHookCountQEEvaluator
    Id: QuestEvent.UnhookSurvivorWhileOnDeathHook
}

Row QuestEvent.UnhookUnsafe:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.CamperWasUnhooked
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.UnhookUnsafe
}

Row QuestEvent.UnhookWhoUnhooked:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.CamperWasUnhooked
        }
    ]
    QuestEventEvaluator: /Game/Blueprints/Archives/Quests/ReturnTheFavorUnhooksEvaluator.ReturnTheFavorUnhooksEvaluator_C
    Id: QuestEvent.UnhookWhoUnhooked
}

Row QuestEvent.UnitTest:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.Camper.Crouch.Start
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.UnitTest
}

Row QuestEvent.UseItem:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Player.Item.Charger.Used.Percentage
        }
    ]
    QuestEventEvaluator: /Script/Archives.ItemUsedQEEvaluator
    Id: QuestEvent.UseItem
}

Row QuestEvent.Vault:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.Camper.Vault
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.Vault
}

Row QuestEvent.VaultInChase:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.Camper.VaultInChase
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.VaultInChase
}

Row QuestEvent.VaultKiller:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.SlasherVault
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.VaultKiller
}

Row QuestEvent.WhiteGlyph:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Camper.ActivateWhiteGlyph
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.WhiteGlyph
}

Row QuestEvent.WiggleFree:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.Camper.EscapeCarry.ByWiggle
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.WiggleFree
}

Row QuestEvent.WiggleFreeDropNearKiller:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.SlasherCarryEnd
        }
    ]
    QuestEventEvaluator: /Game/Blueprints/Archives/Quests/NearMeEvent_SlasherDropNotMeQuestEvaluator.NearMeEvent_SlasherDropNotMeQuestEvaluator_C
    Id: QuestEvent.WiggleFreeDropNearKiller
}

Row QuestEvent.WraithBell:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.Slasher.Wraith.HitBell
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.WraithBell
}

Row QuestEvent.WraithBellNearSurvivor:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.Slasher.Wraith.HitBell
        }
    ]
    QuestEventEvaluator: /Game/Blueprints/Archives/Quests/SurvivorNearMeEvaluator.SurvivorNearMeEvaluator_C
    Id: QuestEvent.WraithBellNearSurvivor
}

Row QuestEvent.WraithBellNearSurvivorDifferent:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.Slasher.Wraith.HitBell
        }
    ]
    QuestEventEvaluator: /Script/Archives.DifferentSurvivorsNearMeQEEvaluator
    Id: QuestEvent.WraithBellNearSurvivorDifferent
}

Row QuestEvent.WraithHitAfterUncloak:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.UncloakAttack
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.WraithHitAfterUncloak
}

Row QuestEvent.WraithHitDifferentAfterUncloak:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Slasher.UncloakAttack
        }
    ]
    QuestEventEvaluator: /Script/Archives.UniqueTargetIncrementQEEvaluator
    Id: QuestEvent.WraithHitDifferentAfterUncloak
}

Row QuestEvent.WraithStalk:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.Slasher.Wraith.CloakStalk
        }
    ]
    QuestEventEvaluator: /Script/Archives.CustomValueQEEvaluator
    Id: QuestEvent.WraithStalk
}

Row QuestEvent.YellowGlyph:
{
    TrackedGameEvents: [
        {
            TagName: GameEvent.ScoreEvent.Camper.ActivateYellowGlyph
        }
    ]
    QuestEventEvaluator: None
    Id: QuestEvent.YellowGlyph
}
